{
  "address": "0x47731dDC08D4351f5e5Fee039a5edBFc6FbaB1c6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "exampleExternalContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exampleExternalContract",
      "outputs": [
        {
          "internalType": "contract ExampleExternalContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openForWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "threshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xfb74c9d02ebfd777eed6ccf76c16ffdbc6f3f9be3e4978a97e885ee3d89376d5",
  "receipt": {
    "to": null,
    "from": "0x84B7B901A27570F17E78272B2DF37d4f51FB0806",
    "contractAddress": "0x47731dDC08D4351f5e5Fee039a5edBFc6FbaB1c6",
    "transactionIndex": 55,
    "gasUsed": "536770",
    "logsBloom": "0x
    "blockHash": "0xdd19060e41ba4a01e9c3df41fc003f23acc3c6bde9ff08ec25b573c7e28aeae5",
    "transactionHash": "0xfb74c9d02ebfd777eed6ccf76c16ffdbc6f3f9be3e4978a97e885ee3d89376d5",
    "logs": [],
    "blockNumber": 7053131,
    "cumulativeGasUsed": "4616068",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x246b0E1e137b52317b606F88328C0E2e1Ce98bfa"
  ],
  "numDeployments": 1,
  "solcInputHash": "16ac84c783653a9791e3f01eecd46027",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exampleExternalContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exampleExternalContract\",\"outputs\":[{\"internalType\":\"contract ExampleExternalContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openForWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deadline()\":{\"notice\":\"Staking deadline\"},\"openForWithdraw()\":{\"notice\":\"Boolean set if threshold is not reached by the deadline\"},\"timeLeft()\":{\"notice\":\"Add a `timeLeft()` view function that returns the time left before the deadline for the frontend\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staker.sol\":\"Staker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ExampleExternalContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;  //Do not change the solidity version as it negativly impacts submission grading\\n\\ncontract ExampleExternalContract {\\n\\n  bool public completed;\\n\\n  function complete() public payable {\\n    completed = true;\\n  }\\n\\n}\\n\",\"keccak256\":\"0x2aaf3c6f1c693b49c7873b32c2859fb8af6148ec3121a54f28c48214061a2c0f\",\"license\":\"MIT\"},\"contracts/Staker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"./ExampleExternalContract.sol\\\";\\n\\ncontract Staker {\\n  ExampleExternalContract public exampleExternalContract;\\n\\n  mapping (address => uint256) public balances;\\n\\n  uint256 public constant threshold = 1 ether;\\n\\n  /// Staking deadline\\n  uint256 public deadline = block.timestamp + 72 hours;\\n\\n  /// Boolean set if threshold is not reached by the deadline\\n  bool public openForWithdraw;\\n\\n  event Stake(address indexed sender, uint256 indexed value);\\n\\n  // MODIFIERS\\n  /// Modifier that checks whether the required deadline has passed\\n  modifier deadlinePassed(bool requireDeadlinePassed) {\\n    uint256 timeRemaining = timeLeft();\\n    if (requireDeadlinePassed) {\\n      require(timeRemaining <= 0, \\\"Deadline has not been passed yet\\\");\\n    } else {\\n      require(timeRemaining > 0, \\\"Deadline is already passed\\\");\\n    }\\n    _;\\n  }\\n\\n  /// Modifier that checks whether the external contract is completed\\n  modifier stakingNotCompleted() {\\n    bool completed = exampleExternalContract.completed();\\n    require(!completed, \\\"Staking period has completed\\\");\\n    _;\\n  }\\n\\n  constructor(address exampleExternalContractAddress)  {\\n      exampleExternalContract = ExampleExternalContract(exampleExternalContractAddress);\\n  }\\n\\n  // Collect funds in a payable `stake()` function and track individual `balances` with a mapping:\\n  //  ( make sure to add a `Stake(address,uint256)` event and emit it for the frontend <List/> display )\\n  function stake() public payable deadlinePassed(false) stakingNotCompleted {\\n    // update the sender's balance\\n    balances[msg.sender] += msg.value;\\n\\n    // emit Stake event to notify the UI\\n    emit Stake(msg.sender, msg.value);\\n  }\\n\\n\\n  // After some `deadline` allow anyone to call an `execute()` function\\n  //  It should either call `exampleExternalContract.complete{value: address(this).balance}()` to send all the value\\n  function execute() public stakingNotCompleted {\\n    uint256 contractBalance = address(this).balance;\\n    if (contractBalance >= threshold) {\\n      // if the `threshold` is met, send the balance to the externalContract\\n      exampleExternalContract.complete{value: contractBalance}();\\n    } else {\\n      // if the `threshold` was not met, allow everyone to call a `withdraw()` function\\n      openForWithdraw = true;\\n    }\\n  }\\n\\n\\n\\n  // Add a `withdraw(address payable)` function lets users withdraw their balance\\n  function withdraw() public deadlinePassed(true) stakingNotCompleted {\\n    \\n      uint256 userBalance = balances[msg.sender];\\n\\n      // reset the sender's balance\\n      balances[msg.sender] = 0;\\n\\n      // transfer sender's balance to the `_to` address\\n      (bool sent, ) = msg.sender.call{value: userBalance}(\\\"\\\");\\n      \\n      // check the amount staked did not reach the threshold by the deadline\\n      require(openForWithdraw && userBalance > 0 && sent, \\\"Withdrawal fail\\\");\\n  }\\n\\n  /// Add a `timeLeft()` view function that returns the time left before the deadline for the frontend\\n  function timeLeft() public view returns (uint256) {\\n      if (block.timestamp >= deadline) {\\n          return 0;\\n      } else {\\n          return deadline - block.timestamp;\\n      }\\n  }\\n\\n\\n  // Add the `receive()` special function that receives eth and calls stake()\\n  receive() external payable {\\n      stake();\\n  }\\n}\",\"keccak256\":\"0x266d86cc8ee7167a14f2d67bbee3050ec25d5e46b6768290c76488bc7c174c63\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052610011426203f480610092565b60025534801561002057600080fd5b506040516108aa3803806108aa83398101604081905261003f91610064565b600080546001600160a01b0319166001600160a01b03929092169190911790556100b6565b600060208284031215610075578081fd5b81516001600160a01b038116811461008b578182fd5b9392505050565b600082198211156100b157634e487b7160e01b81526011600452602481fd5b500190565b6107e5806100c56000396000f3fe60806040526004361061008a5760003560e01c80633ccfd60b116100595780633ccfd60b1461011157806342cde4e81461012657806361461954146101425780639876a643146101575780639f75f2271461018157600080fd5b80631300a6d11461009e57806327e235e3146100c657806329dcb0cf146100f35780633a4b66f11461010957600080fd5b36610099576100976101b9565b005b600080fd5b3480156100aa57600080fd5b506100b3610371565b6040519081526020015b60405180910390f35b3480156100d257600080fd5b506100b36100e13660046106e5565b60016020526000908152604090205481565b3480156100ff57600080fd5b506100b360025481565b6100976101b9565b34801561011d57600080fd5b50610097610395565b34801561013257600080fd5b506100b3670de0b6b3a764000081565b34801561014e57600080fd5b506100976105b2565b34801561016357600080fd5b506003546101719060ff1681565b60405190151581526020016100bd565b34801561018d57600080fd5b506000546101a1906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b6000806101c4610371565b9050811561022457801561021f5760405162461bcd60e51b815260206004820181905260248201527f446561646c696e6520686173206e6f74206265656e207061737365642079657460448201526064015b60405180910390fd5b610274565b600081116102745760405162461bcd60e51b815260206004820152601a60248201527f446561646c696e6520697320616c7265616479207061737365640000000000006044820152606401610216565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c357600080fd5b505afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb9190610713565b9050801561031b5760405162461bcd60e51b815260040161021690610733565b336000908152600160205260408120805434929061033a90849061076a565b9091555050604051349033907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90600090a3505050565b600060025442106103825750600090565b426002546103909190610782565b905090565b600160006103a1610371565b905081156103fc5780156103f75760405162461bcd60e51b815260206004820181905260248201527f446561646c696e6520686173206e6f74206265656e20706173736564207965746044820152606401610216565b61044c565b6000811161044c5760405162461bcd60e51b815260206004820152601a60248201527f446561646c696e6520697320616c7265616479207061737365640000000000006044820152606401610216565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190610713565b905080156104f35760405162461bcd60e51b815260040161021690610733565b33600081815260016020526040808220805490839055905190929083908381818185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b505060035490915060ff1680156105645750600082115b801561056d5750805b6105ab5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dd85b0819985a5b608a1b6044820152606401610216565b5050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561060157600080fd5b505afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190610713565b905080156106595760405162461bcd60e51b815260040161021690610733565b47670de0b6b3a764000081106106d45760008054906101000a90046001600160a01b03166001600160a01b031663522e1177826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b50505050505050565b6003805460ff191660011790555050565b6000602082840312156106f6578081fd5b81356001600160a01b038116811461070c578182fd5b9392505050565b600060208284031215610724578081fd5b8151801515811461070c578182fd5b6020808252601c908201527f5374616b696e6720706572696f642068617320636f6d706c6574656400000000604082015260600190565b6000821982111561077d5761077d610799565b500190565b60008282101561079457610794610799565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bef03bdcbe50338e6f0b6b0a75392681c4e01de936e46261048f9a8a958c2bb864736f6c63430008040033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80633ccfd60b116100595780633ccfd60b1461011157806342cde4e81461012657806361461954146101425780639876a643146101575780639f75f2271461018157600080fd5b80631300a6d11461009e57806327e235e3146100c657806329dcb0cf146100f35780633a4b66f11461010957600080fd5b36610099576100976101b9565b005b600080fd5b3480156100aa57600080fd5b506100b3610371565b6040519081526020015b60405180910390f35b3480156100d257600080fd5b506100b36100e13660046106e5565b60016020526000908152604090205481565b3480156100ff57600080fd5b506100b360025481565b6100976101b9565b34801561011d57600080fd5b50610097610395565b34801561013257600080fd5b506100b3670de0b6b3a764000081565b34801561014e57600080fd5b506100976105b2565b34801561016357600080fd5b506003546101719060ff1681565b60405190151581526020016100bd565b34801561018d57600080fd5b506000546101a1906001600160a01b031681565b6040516001600160a01b0390911681526020016100bd565b6000806101c4610371565b9050811561022457801561021f5760405162461bcd60e51b815260206004820181905260248201527f446561646c696e6520686173206e6f74206265656e207061737365642079657460448201526064015b60405180910390fd5b610274565b600081116102745760405162461bcd60e51b815260206004820152601a60248201527f446561646c696e6520697320616c7265616479207061737365640000000000006044820152606401610216565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c357600080fd5b505afa1580156102d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fb9190610713565b9050801561031b5760405162461bcd60e51b815260040161021690610733565b336000908152600160205260408120805434929061033a90849061076a565b9091555050604051349033907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90600090a3505050565b600060025442106103825750600090565b426002546103909190610782565b905090565b600160006103a1610371565b905081156103fc5780156103f75760405162461bcd60e51b815260206004820181905260248201527f446561646c696e6520686173206e6f74206265656e20706173736564207965746044820152606401610216565b61044c565b6000811161044c5760405162461bcd60e51b815260206004820152601a60248201527f446561646c696e6520697320616c7265616479207061737365640000000000006044820152606401610216565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190610713565b905080156104f35760405162461bcd60e51b815260040161021690610733565b33600081815260016020526040808220805490839055905190929083908381818185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b505060035490915060ff1680156105645750600082115b801561056d5750805b6105ab5760405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dd85b0819985a5b608a1b6044820152606401610216565b5050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316639d9a7fe96040518163ffffffff1660e01b815260040160206040518083038186803b15801561060157600080fd5b505afa158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190610713565b905080156106595760405162461bcd60e51b815260040161021690610733565b47670de0b6b3a764000081106106d45760008054906101000a90046001600160a01b03166001600160a01b031663522e1177826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b50505050505050565b6003805460ff191660011790555050565b6000602082840312156106f6578081fd5b81356001600160a01b038116811461070c578182fd5b9392505050565b600060208284031215610724578081fd5b8151801515811461070c578182fd5b6020808252601c908201527f5374616b696e6720706572696f642068617320636f6d706c6574656400000000604082015260600190565b6000821982111561077d5761077d610799565b500190565b60008282101561079457610794610799565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bef03bdcbe50338e6f0b6b0a75392681c4e01de936e46261048f9a8a958c2bb864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deadline()": {
        "notice": "Staking deadline"
      },
      "openForWithdraw()": {
        "notice": "Boolean set if threshold is not reached by the deadline"
      },
      "timeLeft()": {
        "notice": "Add a `timeLeft()` view function that returns the time left before the deadline for the frontend"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18,
        "contract": "contracts/Staker.sol:Staker",
        "label": "exampleExternalContract",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ExampleExternalContract)12"
      },
      {
        "astId": 22,
        "contract": "contracts/Staker.sol:Staker",
        "label": "balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 32,
        "contract": "contracts/Staker.sol:Staker",
        "label": "deadline",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 35,
        "contract": "contracts/Staker.sol:Staker",
        "label": "openForWithdraw",
        "offset": 0,
        "slot": "3",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ExampleExternalContract)12": {
        "encoding": "inplace",
        "label": "contract ExampleExternalContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}